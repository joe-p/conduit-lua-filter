# Log verbosity: PANIC, FATAL, ERROR, WARN, INFO, DEBUG, TRACE
log-level: INFO

# If no log file is provided logs are written to stdout.
#log-file:

# Number of retries to perform after a pipeline plugin error.
# Set to 0 to retry forever.
retry-count: 10

# Time duration to wait between retry attempts.
retry-delay: "1s"

# Optional filepath to use for pidfile.
#pid-filepath: /path/to/pidfile

# Whether or not to print the conduit banner on startup.
hide-banner: false

# When enabled prometheus metrics are available on '/metrics'
metrics:
    mode: OFF
    addr: ":9999"
    prefix: "conduit"

# The importer is typically an algod follower node.
importer:
    name: algod
    config:
        # The mode of operation, either "archival" or "follower".
        # * archival mode allows you to start processing on any round but does not
        #   contain the ledger state delta objects required for the postgres writer.
        # * follower mode allows you to use a lightweight non-archival node as the
        #   data source. In addition, it will provide ledger state delta objects to
        #   the processors and exporter.
        mode: "follower"
      
        # Algod API address.
        netaddr: "http://localhost:8080"
      
        # Algod API token.
        token: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
      
        # Algod catchpoint catchup arguments
        catchup-config:
            # Algod Admin API Token. Set the admin token to use fast catchup during
            # startup. The importer checks to see if a catchup would help and if so
            # the catchpoint label will be used. If no catchpoint is provided, the
            # importer will automatically select one.
            admin-token: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            # The catchpoint to use when running fast catchup. If this is set it
            # overrides 'auto: true'. To select an appropriate catchpoint for your
            # deployment, see the list of available catchpoints for each network:
            #   mainnet: https://algorand-catchpoints.s3.us-east-2.amazonaws.com/consolidated/mainnet_catchpoints.txt
            #   betanet: https://algorand-catchpoints.s3.us-east-2.amazonaws.com/consolidated/betanet_catchpoints.txt
            #   testnet: https://algorand-catchpoints.s3.us-east-2.amazonaws.com/consolidated/testnet_catchpoints.txt
            catchpoint: ""

# Zero or more processors may be defined to manipulate what data
# reaches the exporter.
processors:
    - name: lua_filter

# An exporter is defined to do something with the data.
exporter:
    name: postgresql
    config:
        # Pgsql connection string
        # See https://github.com/jackc/pgconn for more details
        connection-string: "host=localhost port=5432 user=algorand password=algorand dbname=conduit_db"
    
        # Maximum connection number for connection pool
        # This means the total number of active queries that can be running
        # concurrently can never be more than this
        max-conn: 20
    
        # The delete task prunes old transactions according to its configuration.
        # By default transactions are not deleted.
        delete-task:
            # Interval used to prune the data. The values can be -1 to run at startup,
            # 0 to disable, or N to run every N rounds.
            interval: 0
        
            # Rounds to keep
            rounds: 100000
